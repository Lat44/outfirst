/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Vessel as PrismaVessel } from "@prisma/client";

export class VesselServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.VesselCountArgs, "select">): Promise<number> {
    return this.prisma.vessel.count(args);
  }

  async vessels(args: Prisma.VesselFindManyArgs): Promise<PrismaVessel[]> {
    return this.prisma.vessel.findMany(args);
  }
  async vessel(
    args: Prisma.VesselFindUniqueArgs
  ): Promise<PrismaVessel | null> {
    return this.prisma.vessel.findUnique(args);
  }
  async createVessel(args: Prisma.VesselCreateArgs): Promise<PrismaVessel> {
    return this.prisma.vessel.create(args);
  }
  async updateVessel(args: Prisma.VesselUpdateArgs): Promise<PrismaVessel> {
    return this.prisma.vessel.update(args);
  }
  async deleteVessel(args: Prisma.VesselDeleteArgs): Promise<PrismaVessel> {
    return this.prisma.vessel.delete(args);
  }
}
